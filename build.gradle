buildscript {
    ext.artemis_version = '2.6.2'
    ext.javax_annotation_api_version = '1.2'
    ext.kotlin_version = '1.2.51'
    ext.io_prometheus_version = '0.4.0'
    ext.jetty_version = '9.4.11.v20180605'
    ext.ktor_version = '0.9.3'
    ext.logback_version = '1.2.3'
    ext.logstash_encoder_version = '5.1'
    ext.okhttp_version = '3.11.0'
    ext.coroutines_version = '0.23.4'
    ext.jackson_version = '2.9.6'
    ext.spek2_version = '2.0.0-alpha.2'
    ext.kluent_version = '1.41'
    ext.jaxb_basic_ant_version = '1.11.1'
    ext.jaxb_version = '2.3.0.1'
    ext.ibm_mq_version = '9.0.5.0'
    ext.nav_journalbehandling = '1.3.3'
    ext.cxf_version = '3.2.5'
    ext.ekstern_helse_fastlegeinformasjon_tjenestespesifikasjon_version = '2.1.4'
    ext.nav_fim_organisasjon_v4_tjenestespesifikasjon_version =  '1.0.4'
    ext.confluent_version = "4.0.0"
    ext.kafka_version = "2.0.0"
    ext.nav_dokumentproduksjon_v3_tjenestespesifikasjon_version = '3.1.3'
    ext.jaxb2_commons_basic_version = '1.11.1'
    ext.partner_emottak_version = '1.0.0'
    ext.adresseregisteretV1_version = '1.0.2'
    ext.jaxb_api_version = '2.1'
    ext.jaxws_api_version = "2.2" // TODO: 2.3.0
    ext.javax_activation_version = '1.1.1'
    ext.altinnkanal_schemas = '1.0.0'
    ext.saaj_version = "1.4.0"
    ext.kith_dialogmelding_version = '1.1'
    ext.fellesformat_version = '1.0'
    ext.kith_hodemelding_version = '1.0'
    ext.kith_base64_version = '1.1'
    ext.kafka_embedded_version = '1.0.0'
    ext.mockito_version = '2.22.0'

    ext.jaxb2SourceDir = file("$buildDir/generated-sources/jaxb2")
}

plugins {
    id 'no.nils.wsdl2java' version '0.10'
    id 'com.github.ben-manes.versions' version '0.20.0'
    id 'org.jetbrains.kotlin.jvm' version "1.2.51"
    id 'application'
    id 'java'
    id 'idea'
    id 'org.jmailen.kotlinter' version '1.14.0'
}

group 'no.nav.paop'
version '1.0-SNAPSHOT'

mainClassName = 'no.nav.paop.PaopApplicationKt'

applicationDefaultJvmArgs = [
        '-Dcom.ibm.mq.cfg.useIBMCipherMappings=false',
        '-Djavax.net.ssl.trustStore=${NAV_TRUSTSTORE_PATH}',
        '-Djavax.net.ssl.trustStorePassword=${NAV_TRUSTSTORE_PASSWORD}',
        '-Djavax.net.ssl.trustStoreType=JKS',
        '-XX:+UnlockExperimentalVMOptions',
        '-XX:+UseG1GC',
        '-XshowSettings:vm'
]

startScripts {
    doLast {
        unixScript.text = unixScript.text.replace('\\${NAV_TRUSTSTORE_PATH}', '${NAV_TRUSTSTORE_PATH}')
        unixScript.text = unixScript.text.replace('\\${NAV_TRUSTSTORE_PASSWORD}', '${NAV_TRUSTSTORE_PASSWORD}')
    }
}

configurations {
    navWsdl {
        transitive = false
    }
    navXsd {
        transitive = false
    }
    generateJaxb2
}

test {
    useJUnitPlatform {
        includeEngines 'spek2'
    }
    testLogging {
        showStandardStreams = true
    }
}

task printVersion() {
    doLast {
        println(version)
    }
}

class Jaxb2Task extends DefaultTask {
    @OutputDirectory
    File outputDir
    @InputDirectory
    File sourceDir
    @InputDirectory
    File xjbDir

    @TaskAction
    def generateFiles() {
        outputDir.deleteDir()
        outputDir.mkdirs()
        ant.taskdef(
                'classpath': project.configurations.generateJaxb2.asPath,
                'name': 'xjc',
                'classname': 'org.jvnet.jaxb2_commons.xjc.XJC2Task'
        )

        ant.xjc(
                'destdir': outputDir,
                'package': 'no.nav.model.dataBatch',
                'schema': "$sourceDir/genericbatch.2013.06.xsd",
                'encoding': 'UTF-8',
                'fork': 'true'
        )

        ant.xjc(
                'destdir': outputDir,
                'package': 'no.nav.model.oppfolgingsplan2014',
                'schema': "$sourceDir/Oppfolgingsplan2_4M.xsd",
                'encoding': 'UTF-8',
                'fork': 'true'
        )


        ant.xjc(
                'destdir': outputDir,
                'package': 'no.nav.model.oppfolgingsplan2016',
                'schema': "$sourceDir/Oppfolgingsplan201607_2.xsd",
                'encoding': 'UTF-8',
                'fork': 'true'
        )

        ant.xjc(
                'destdir': outputDir,
                'package': 'no.nav.model.oppfolgingsplan2012',
                'schema': "$sourceDir/Oppfolgingsplan_Altinn.xsd",
                'encoding': 'UTF-8',
                'fork': 'true'
        )

        ant.xjc(
                'destdir': outputDir,
                'package': 'no.nav.model.navOppfPlan',
                'schema': "$sourceDir/sbl_oppfolgingsplan_v4.xsd",
                'encoding': 'UTF-8',
                'fork': 'true'
        )

        ant.xjc(
                'destdir': outputDir,
                'package': 'no.nav.model.arenaOppfolging',
                'schema': "$sourceDir/ArenaOppfolgingPlan_v4.xsd",
                'encoding': 'UTF-8',
                'fork': 'true'
        ) {
            binding(dir: xjbDir, includes: "binding.xml")
        }

        ant.xjc(
                'destdir': outputDir,
                'package': 'no.nav.model.eiaDokumentInfo',
                'schema': "$sourceDir/EiaDokumentInfo1-0.xsd",
                'encoding': 'UTF-8',
                'fork': 'true'
        )

        ant.xjc(
                'destdir': outputDir,
                'package': 'no.nav.model.arenaBrevTilArbeidsgiver',
                'schema': "$sourceDir/ArenaBrevTilArbeidsgiver_1.xsd",
                'encoding': 'UTF-8',
                'fork': 'true'
        )

        // TODO this is only TMP
        ant.xjc(
                'destdir': outputDir,
                'package': 'no.nav.model.arena.brev',
                'schema': "${project.buildDir}/xsd/arenabrev/arena_000001.xsd",
                'encoding': 'UTF-8',
                'fork': 'true'
        )
        ant.xjc(
                'destdir': outputDir,
                'package': 'no.nav.model.arena.brevdata',
                'schema': "${project.buildDir}/xsd/arenabrev/Allow_Any_All.xsd",
                'encoding': 'UTF-8',
                'fork': 'true'
        )

    }
}

task copyWsdlFromArtifacts(type: Copy) {
    includeEmptyDirs = false
    from {
        configurations.navWsdl.asFileTree.forEach { artifact ->
            from zipTree(artifact)
        }
    }
    into "$buildDir/schema/"
    include '**/*.xsd', '**/*.wsdl'
}

wsdl2java {
    dependsOn copyWsdlFromArtifacts
    wsdlDir = file("$buildDir/schema")
    wsdlsToGenerate = [
            ["-xjc", "-p", "http://register.nhn.no/Common=no.nhn.register.commontypes", "$buildDir/schema/fastlegeinformasjon.wsdl"],
            ["$buildDir/schema/partner.wsdl"],
            ["-xjc", "-p", "no.nhn.adresseregisteret", "$buildDir/schema/tjenestespesifikasjon/adresseregisteret.wsdl"]
    ]
}

task copyXsdsFromArtifacts(type: Copy) {
    includeEmptyDirs = false
    from {
        configurations.navXsd.asFileTree.forEach { artifact ->
            from zipTree(artifact)
        }
    }
    into "$buildDir/xsd/"
    include('**/*.xsd')
}

task generateJaxb2(type: Jaxb2Task) {
    dependsOn copyXsdsFromArtifacts
    outputDir = jaxb2SourceDir
    sourceDir = file("$projectDir/src/main/resources/xsd")
    xjbDir = file("$projectDir/src/main/xjb")
}

sourceSets {
    main {
        java {
            srcDir jaxb2SourceDir
        }
    }
}

// suppress warning for experimental coroutines
kotlin { experimental { coroutines "enable"} }

compileKotlin {
    dependsOn wsdl2java
    dependsOn generateJaxb2
    kotlinOptions.jvmTarget = "1.8"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
    maven { url "https://dl.bintray.com/kotlin/ktor" }
    maven { url  "https://dl.bintray.com/spekframework/spek-dev" }
    maven {
        url 'https://repo.adeo.no/repository/maven-releases/'
        metadataSources {
            artifact()
        }
    }
    maven { url = "http://packages.confluent.io/maven/" }
}

dependencies {
    generateJaxb2 "com.sun.xml.bind:jaxb-xjc:$jaxb_version"
    generateJaxb2 "org.glassfish.jaxb:jaxb-runtime:$jaxb_version"
    generateJaxb2 "javax.xml.bind:jaxb-api:$jaxb_api_version"
    generateJaxb2 "org.jvnet.jaxb2_commons:jaxb2-basics-ant:$jaxb_basic_ant_version"
    generateJaxb2 "javax.activation:activation:$javax_activation_version"
    wsdl2java "javax.xml.bind:jaxb-api:2.1"
    wsdl2java "javax.xml.ws:jaxws-api:2.2.1"
    wsdl2java "javax.activation:activation:1.1.1"
    wsdl2java "javax.annotation:javax.annotation-api:1.3.2"

    // General application flow
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"

    // Communication libraries
    implementation "org.apache.cxf:cxf-rt-frontend-jaxws:$cxf_version"
    implementation "org.apache.cxf:cxf-rt-features-logging:$cxf_version"
    implementation "org.apache.cxf:cxf-rt-transports-http:$cxf_version"
    implementation "org.apache.cxf:cxf-rt-ws-security:$cxf_version"
    implementation "javax.xml.ws:jaxws-api:$jaxws_api_version"

    // Everything used for HTTP stats and selftest
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "io.prometheus:simpleclient_hotspot:$io_prometheus_version"
    implementation "io.prometheus:simpleclient_common:$io_prometheus_version"
    implementation "io.ktor:ktor-server-netty:$ktor_version"

    implementation "com.fasterxml.jackson.module:jackson-module-jaxb-annotations:$jackson_version"
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:$jackson_version"
    implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-xml:$jackson_version"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jackson_version"

    implementation "ch.qos.logback:logback-classic:$logback_version"
    implementation "net.logstash.logback:logstash-logback-encoder:$logstash_encoder_version"
    implementation "com.ibm.mq:com.ibm.mq.allclient:$ibm_mq_version"

    implementation "no.nav.tjenester:nav-journalbehandling-tjenestespesifikasjon:$nav_journalbehandling:jaxws"
    implementation "no.nav.tjenester.fim:nav-fim-organisasjon-v4-tjenestespesifikasjon:$nav_fim_organisasjon_v4_tjenestespesifikasjon_version:jaxws"
    implementation "no.nav.tjenester:nav-dokumentproduksjon-v3-tjenestespesifikasjon:$nav_dokumentproduksjon_v3_tjenestespesifikasjon_version:jaxws"
    navWsdl "no.nav.tjenester:partner-nav-emottak-partner-web:$partner_emottak_version@zip"
    navWsdl "no.nav.syfo.tjenester:adresseregisteretV1-tjenestespesifikasjon:$adresseregisteretV1_version"
    navWsdl "no.nav.tjenester:ekstern-helse-fastlegeinformasjon-tjenestespesifikasjon:$ekstern_helse_fastlegeinformasjon_tjenestespesifikasjon_version@zip"


    implementation "io.confluent:kafka-avro-serializer:$confluent_version"
    implementation "org.apache.kafka:kafka_2.12:$kafka_version"
    implementation "org.jvnet.jaxb2_commons:jaxb2-basics-runtime:$jaxb2_commons_basic_version"
    implementation "javax.xml.bind:jaxb-api:$jaxb_api_version"
    implementation "javax.activation:activation:$javax_activation_version"
    implementation "org.glassfish.jaxb:jaxb-runtime:$jaxb_version"

    implementation "no.nav.altinnkanal:altinnkanal-schemas:$altinnkanal_schemas"
    implementation("com.sun.xml.messaging.saaj:saaj-impl:$saaj_version")
    implementation "no.nav.syfo.tjenester:kith-dialogmelding:$kith_dialogmelding_version"
    implementation "no.nav.syfo.tjenester:fellesformat:$fellesformat_version"
    implementation "no.nav.syfo.tjenester:kith-hodemelding:$kith_hodemelding_version"
    implementation "no.nav.syfo.tjenester:kith-base64:$kith_base64_version"
    implementation "org.mockito:mockito-core:$mockito_version"

    // TODO this is only TMP
    navXsd "no.nav.dok.metaforcemal:arenabrev:7.2.5"

    testImplementation "org.spekframework.spek2:spek-dsl-jvm:$spek2_version"
    testImplementation "org.amshove.kluent:kluent:$kluent_version"
    testImplementation "org.apache.activemq:artemis-server:$artemis_version"
    testImplementation "org.apache.activemq:artemis-jms-client:$artemis_version"
    testImplementation "org.eclipse.jetty:jetty-servlet:$jetty_version"
    testImplementation "no.nav:kafka-embedded-env:$kafka_embedded_version"
    testRuntimeOnly "org.spekframework.spek2:spek-runtime-jvm:$spek2_version"
    testRuntimeOnly "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    testRuntimeOnly "org.spekframework.spek2:spek-runner-junit5:$spek2_version"
}
